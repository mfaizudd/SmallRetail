// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmallRetail.Data;

namespace SmallRetail.Data.Migrations
{
    [DbContext(typeof(SmallRetailDbContext))]
    partial class SmallRetailDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df0b77b8-50cd-4f1f-9a9f-0f08fc16dc1f"),
                            Barcode = "615960672",
                            DateCreated = new DateTime(2018, 10, 7, 16, 1, 14, 0, DateTimeKind.Local).AddTicks(5348),
                            DateUpdated = new DateTime(2021, 2, 24, 21, 55, 34, 50, DateTimeKind.Local).AddTicks(603),
                            Name = "voluptas",
                            Price = 7600m
                        },
                        new
                        {
                            Id = new Guid("6acbd74f-2935-47ec-9286-0e1488674804"),
                            Barcode = "921334996",
                            DateCreated = new DateTime(2019, 6, 17, 14, 35, 1, 642, DateTimeKind.Local).AddTicks(7667),
                            DateUpdated = new DateTime(2020, 6, 20, 7, 16, 39, 448, DateTimeKind.Local).AddTicks(5469),
                            Name = "et",
                            Price = 1800m
                        },
                        new
                        {
                            Id = new Guid("28ed9a3e-135a-4650-a614-5c45959e1334"),
                            Barcode = "535804743",
                            DateCreated = new DateTime(2019, 8, 14, 10, 47, 44, 769, DateTimeKind.Local).AddTicks(4147),
                            DateUpdated = new DateTime(2021, 5, 28, 18, 25, 49, 512, DateTimeKind.Local).AddTicks(1219),
                            Name = "autem",
                            Price = 2800m
                        },
                        new
                        {
                            Id = new Guid("455cb7eb-c61f-4b55-9e49-0ab61caabdfc"),
                            Barcode = "836519107",
                            DateCreated = new DateTime(2018, 12, 27, 17, 16, 16, 420, DateTimeKind.Local).AddTicks(156),
                            DateUpdated = new DateTime(2019, 11, 13, 0, 5, 59, 833, DateTimeKind.Local).AddTicks(9399),
                            Name = "commodi",
                            Price = 9900m
                        },
                        new
                        {
                            Id = new Guid("dbf08abb-cf54-41c1-b712-424a30e355ec"),
                            Barcode = "324923215",
                            DateCreated = new DateTime(2020, 3, 4, 22, 58, 41, 394, DateTimeKind.Local).AddTicks(2914),
                            DateUpdated = new DateTime(2020, 12, 12, 18, 59, 51, 73, DateTimeKind.Local).AddTicks(2207),
                            Name = "voluptatem",
                            Price = 2600m
                        },
                        new
                        {
                            Id = new Guid("6d28c1b9-91c6-4d77-89e0-2e2b0b29593b"),
                            Barcode = "317688636",
                            DateCreated = new DateTime(2021, 1, 26, 19, 27, 28, 352, DateTimeKind.Local).AddTicks(2694),
                            DateUpdated = new DateTime(2019, 10, 24, 21, 10, 36, 444, DateTimeKind.Local).AddTicks(3571),
                            Name = "provident",
                            Price = 3200m
                        },
                        new
                        {
                            Id = new Guid("0863e056-3d15-4177-97b8-9f9c4656163a"),
                            Barcode = "254795921",
                            DateCreated = new DateTime(2020, 6, 4, 23, 47, 40, 984, DateTimeKind.Local).AddTicks(7181),
                            DateUpdated = new DateTime(2021, 2, 21, 12, 11, 33, 102, DateTimeKind.Local).AddTicks(5800),
                            Name = "natus",
                            Price = 9000m
                        },
                        new
                        {
                            Id = new Guid("e2de859d-f000-4ff3-8c85-8dcf8b8c4314"),
                            Barcode = "938203186",
                            DateCreated = new DateTime(2021, 1, 7, 11, 54, 39, 821, DateTimeKind.Local).AddTicks(6597),
                            DateUpdated = new DateTime(2020, 7, 1, 21, 3, 13, 937, DateTimeKind.Local).AddTicks(1327),
                            Name = "sit",
                            Price = 2500m
                        },
                        new
                        {
                            Id = new Guid("fe3529f7-2bd8-4ede-8799-1ac217e5bab0"),
                            Barcode = "114661841",
                            DateCreated = new DateTime(2019, 2, 5, 8, 46, 49, 955, DateTimeKind.Local).AddTicks(6914),
                            DateUpdated = new DateTime(2020, 10, 21, 16, 31, 38, 438, DateTimeKind.Local).AddTicks(5541),
                            Name = "omnis",
                            Price = 6800m
                        },
                        new
                        {
                            Id = new Guid("9069920b-fd4d-4e20-998e-dcaa3db96839"),
                            Barcode = "749158279",
                            DateCreated = new DateTime(2020, 3, 30, 7, 53, 37, 363, DateTimeKind.Local).AddTicks(5173),
                            DateUpdated = new DateTime(2020, 7, 2, 9, 44, 15, 940, DateTimeKind.Local).AddTicks(5083),
                            Name = "autem",
                            Price = 4800m
                        });
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("TransactionId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.HasOne("SmallRetail.Data.Models.Product", "Product")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallRetail.Data.Models.Transaction", "Transaction")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Navigation("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Navigation("TransactionProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
