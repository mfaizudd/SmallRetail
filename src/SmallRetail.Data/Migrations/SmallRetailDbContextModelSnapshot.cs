// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmallRetail.Data;

namespace SmallRetail.Data.Migrations
{
    [DbContext(typeof(SmallRetailDbContext))]
    partial class SmallRetailDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("448c3aab-95e6-4037-bfcb-5cd23b7710aa"),
                            Barcode = "116348357",
                            DateCreated = new DateTime(2019, 7, 24, 2, 23, 45, 640, DateTimeKind.Local).AddTicks(6884),
                            DateUpdated = new DateTime(2019, 8, 9, 13, 57, 10, 532, DateTimeKind.Local).AddTicks(577),
                            Name = "unde",
                            Price = 6700m
                        },
                        new
                        {
                            Id = new Guid("7a3981fd-b74f-4375-b263-6d8fda08ff27"),
                            Barcode = "532134310",
                            DateCreated = new DateTime(2019, 1, 18, 22, 43, 25, 962, DateTimeKind.Local).AddTicks(3125),
                            DateUpdated = new DateTime(2019, 10, 30, 16, 9, 44, 391, DateTimeKind.Local).AddTicks(6147),
                            Name = "id",
                            Price = 9700m
                        },
                        new
                        {
                            Id = new Guid("1f527df6-0524-4d33-aaa0-3281f9341555"),
                            Barcode = "427422610",
                            DateCreated = new DateTime(2020, 1, 31, 12, 58, 29, 403, DateTimeKind.Local).AddTicks(1309),
                            DateUpdated = new DateTime(2021, 5, 8, 10, 28, 55, 715, DateTimeKind.Local).AddTicks(4100),
                            Name = "quis",
                            Price = 7200m
                        },
                        new
                        {
                            Id = new Guid("0ab77afd-92b2-4eac-a90c-ef97bf3c657e"),
                            Barcode = "304610872",
                            DateCreated = new DateTime(2020, 1, 19, 8, 29, 49, 38, DateTimeKind.Local).AddTicks(1833),
                            DateUpdated = new DateTime(2020, 8, 8, 12, 1, 8, 631, DateTimeKind.Local).AddTicks(3742),
                            Name = "qui",
                            Price = 5100m
                        },
                        new
                        {
                            Id = new Guid("dd05afc0-01d8-4546-93f0-466930e05a10"),
                            Barcode = "437036563",
                            DateCreated = new DateTime(2020, 8, 10, 1, 7, 20, 341, DateTimeKind.Local).AddTicks(4618),
                            DateUpdated = new DateTime(2020, 10, 12, 0, 24, 58, 883, DateTimeKind.Local).AddTicks(5502),
                            Name = "architecto",
                            Price = 7900m
                        },
                        new
                        {
                            Id = new Guid("3d24f21e-bb45-4b06-b0a4-6f1b0aa1f310"),
                            Barcode = "307505720",
                            DateCreated = new DateTime(2020, 5, 1, 11, 57, 8, 46, DateTimeKind.Local).AddTicks(9326),
                            DateUpdated = new DateTime(2020, 3, 12, 4, 6, 10, 284, DateTimeKind.Local).AddTicks(2390),
                            Name = "commodi",
                            Price = 7500m
                        },
                        new
                        {
                            Id = new Guid("30d1e721-b2bb-43a3-bac6-7a8e1e8f816f"),
                            Barcode = "990282977",
                            DateCreated = new DateTime(2018, 7, 3, 10, 10, 21, 905, DateTimeKind.Local).AddTicks(5407),
                            DateUpdated = new DateTime(2019, 8, 11, 12, 28, 57, 237, DateTimeKind.Local).AddTicks(264),
                            Name = "modi",
                            Price = 4400m
                        },
                        new
                        {
                            Id = new Guid("7478ce65-87c9-4be0-97cd-e0871987f8f5"),
                            Barcode = "083096376",
                            DateCreated = new DateTime(2019, 3, 6, 18, 59, 18, 822, DateTimeKind.Local).AddTicks(5351),
                            DateUpdated = new DateTime(2020, 10, 6, 6, 54, 27, 368, DateTimeKind.Local).AddTicks(4534),
                            Name = "eos",
                            Price = 9800m
                        },
                        new
                        {
                            Id = new Guid("8cd16b00-20d9-4e02-837b-6f19280db3a6"),
                            Barcode = "971409776",
                            DateCreated = new DateTime(2020, 12, 6, 20, 20, 41, 905, DateTimeKind.Local).AddTicks(6523),
                            DateUpdated = new DateTime(2021, 1, 3, 1, 25, 39, 818, DateTimeKind.Local).AddTicks(5226),
                            Name = "expedita",
                            Price = 5800m
                        },
                        new
                        {
                            Id = new Guid("108d65eb-4df7-4842-b4a9-889ef403b58c"),
                            Barcode = "525572514",
                            DateCreated = new DateTime(2021, 3, 21, 6, 0, 22, 133, DateTimeKind.Local).AddTicks(371),
                            DateUpdated = new DateTime(2020, 8, 7, 20, 49, 49, 10, DateTimeKind.Local).AddTicks(3649),
                            Name = "voluptas",
                            Price = 8700m
                        });
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.Property<int>("TransactionId")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("TransactionId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username", "Password")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.HasOne("SmallRetail.Data.Models.Product", "Product")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallRetail.Data.Models.Transaction", "Transaction")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Navigation("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Navigation("TransactionProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
