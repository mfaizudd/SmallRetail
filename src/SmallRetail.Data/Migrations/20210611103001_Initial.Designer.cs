// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmallRetail.Data;

namespace SmallRetail.Data.Migrations
{
    [DbContext(typeof(SmallRetailDbContext))]
    [Migration("20210611103001_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("243e5424-d4b5-4591-8cac-eeec11001a6b"),
                            Barcode = "658265231",
                            DateCreated = new DateTime(2018, 7, 25, 18, 30, 7, 596, DateTimeKind.Local).AddTicks(7894),
                            DateUpdated = new DateTime(2020, 5, 19, 17, 13, 44, 105, DateTimeKind.Local).AddTicks(383),
                            Name = "et",
                            Price = 1500m
                        },
                        new
                        {
                            Id = new Guid("b86c8736-1e77-4aae-bcf2-e94a4bb73b33"),
                            Barcode = "894631317",
                            DateCreated = new DateTime(2020, 7, 24, 11, 50, 29, 632, DateTimeKind.Local).AddTicks(2057),
                            DateUpdated = new DateTime(2019, 8, 6, 12, 18, 56, 133, DateTimeKind.Local).AddTicks(7548),
                            Name = "exercitationem",
                            Price = 3800m
                        },
                        new
                        {
                            Id = new Guid("d18744ed-3d94-464a-b23c-adc290f449f4"),
                            Barcode = "334928920",
                            DateCreated = new DateTime(2019, 6, 6, 20, 34, 44, 432, DateTimeKind.Local).AddTicks(535),
                            DateUpdated = new DateTime(2020, 3, 5, 21, 48, 50, 338, DateTimeKind.Local).AddTicks(561),
                            Name = "harum",
                            Price = 8700m
                        },
                        new
                        {
                            Id = new Guid("fce70afe-ca9e-4fbf-8a81-c3076cc4506a"),
                            Barcode = "255223381",
                            DateCreated = new DateTime(2019, 5, 12, 1, 41, 42, 561, DateTimeKind.Local).AddTicks(6589),
                            DateUpdated = new DateTime(2019, 8, 22, 19, 39, 5, 15, DateTimeKind.Local).AddTicks(1693),
                            Name = "rem",
                            Price = 9300m
                        },
                        new
                        {
                            Id = new Guid("618fb69e-a2bd-46b4-a3fb-3f7a61d7038f"),
                            Barcode = "048824971",
                            DateCreated = new DateTime(2020, 11, 2, 2, 7, 58, 959, DateTimeKind.Local).AddTicks(4718),
                            DateUpdated = new DateTime(2020, 3, 16, 17, 2, 23, 316, DateTimeKind.Local).AddTicks(9403),
                            Name = "rerum",
                            Price = 8900m
                        },
                        new
                        {
                            Id = new Guid("91bc0ed7-6ce0-4363-a77e-f1e96df11f69"),
                            Barcode = "392835968",
                            DateCreated = new DateTime(2019, 11, 11, 12, 19, 9, 742, DateTimeKind.Local).AddTicks(6465),
                            DateUpdated = new DateTime(2021, 5, 28, 12, 40, 32, 983, DateTimeKind.Local).AddTicks(5648),
                            Name = "autem",
                            Price = 5700m
                        },
                        new
                        {
                            Id = new Guid("4033c891-3cb8-41bb-9850-4def82393423"),
                            Barcode = "090184237",
                            DateCreated = new DateTime(2020, 11, 13, 12, 0, 34, 859, DateTimeKind.Local).AddTicks(3005),
                            DateUpdated = new DateTime(2020, 9, 11, 9, 11, 54, 641, DateTimeKind.Local).AddTicks(9296),
                            Name = "corrupti",
                            Price = 4600m
                        },
                        new
                        {
                            Id = new Guid("632b77ba-c9c5-46ee-9a04-347c9c09f7d8"),
                            Barcode = "368056060",
                            DateCreated = new DateTime(2020, 5, 31, 18, 53, 54, 780, DateTimeKind.Local).AddTicks(5652),
                            DateUpdated = new DateTime(2021, 2, 12, 4, 12, 20, 33, DateTimeKind.Local).AddTicks(4476),
                            Name = "ea",
                            Price = 6100m
                        },
                        new
                        {
                            Id = new Guid("6be3b8b6-1e53-4fff-b521-e14db68809d8"),
                            Barcode = "472162324",
                            DateCreated = new DateTime(2018, 6, 18, 12, 27, 42, 952, DateTimeKind.Local).AddTicks(709),
                            DateUpdated = new DateTime(2021, 4, 7, 11, 12, 9, 269, DateTimeKind.Local).AddTicks(5187),
                            Name = "aperiam",
                            Price = 6600m
                        },
                        new
                        {
                            Id = new Guid("fdc6cf6b-f524-48fb-a5fd-5a7f099d11bc"),
                            Barcode = "492557691",
                            DateCreated = new DateTime(2019, 1, 7, 10, 12, 6, 730, DateTimeKind.Local).AddTicks(1406),
                            DateUpdated = new DateTime(2021, 1, 14, 18, 36, 52, 67, DateTimeKind.Local).AddTicks(6763),
                            Name = "quis",
                            Price = 7800m
                        });
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.Property<int>("TransactionId")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("TransactionId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.HasOne("SmallRetail.Data.Models.Product", "Product")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallRetail.Data.Models.Transaction", "Transaction")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Navigation("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Navigation("TransactionProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
