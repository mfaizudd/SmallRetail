// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmallRetail.Data;

namespace SmallRetail.Data.Migrations
{
    [DbContext(typeof(SmallRetailDbContext))]
    [Migration("20210610051237_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("466e46c6-d313-4554-ac70-acfc0270ab98"),
                            Barcode = "23765498",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(1199),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(1505),
                            Name = "10155509",
                            Price = 52700m
                        },
                        new
                        {
                            Id = new Guid("58cf2b4b-ac62-4376-af17-bd619c85e56a"),
                            Barcode = "71546358",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(1998),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(1999),
                            Name = "47562431",
                            Price = 66900m
                        },
                        new
                        {
                            Id = new Guid("a775adfe-9fff-4ffb-9886-bb879f27db4b"),
                            Barcode = "75766147",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2053),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2054),
                            Name = "43255813",
                            Price = 53600m
                        },
                        new
                        {
                            Id = new Guid("a6fee65b-4b59-4996-bd61-a7891e5204ba"),
                            Barcode = "24963242",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2077),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2078),
                            Name = "45537160",
                            Price = 1400m
                        },
                        new
                        {
                            Id = new Guid("baa252f1-d914-4008-98fd-443a5d3ba8bb"),
                            Barcode = "74385114",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2101),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2101),
                            Name = "83797712",
                            Price = 6800m
                        },
                        new
                        {
                            Id = new Guid("0a7f8dd3-4093-4f9f-bd00-e5b0baf627d0"),
                            Barcode = "37803287",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2132),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2132),
                            Name = "42849798",
                            Price = 96000m
                        },
                        new
                        {
                            Id = new Guid("a206fd15-ce59-4963-97b1-c07224ac9c2b"),
                            Barcode = "44316971",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2156),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2156),
                            Name = "52574475",
                            Price = 50000m
                        },
                        new
                        {
                            Id = new Guid("b2c151db-6d5a-4d3c-8bbc-58e710bad8db"),
                            Barcode = "20567249",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2178),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2179),
                            Name = "63825881",
                            Price = 22800m
                        },
                        new
                        {
                            Id = new Guid("0cc2c8db-8e96-42cd-9761-a1439ebdfb55"),
                            Barcode = "30309555",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2201),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2201),
                            Name = "62448762",
                            Price = 67100m
                        },
                        new
                        {
                            Id = new Guid("cbb881cc-cc3f-40ce-afb8-9c0c790f9814"),
                            Barcode = "89934134",
                            DateCreated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2226),
                            DateUpdated = new DateTime(2021, 6, 10, 5, 12, 37, 279, DateTimeKind.Utc).AddTicks(2226),
                            Name = "85360956",
                            Price = 71300m
                        });
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.Property<int>("TransactionId")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("TransactionId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username", "Password")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.TransactionProduct", b =>
                {
                    b.HasOne("SmallRetail.Data.Models.Product", "Product")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmallRetail.Data.Models.Transaction", "Transaction")
                        .WithMany("TransactionProducts")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Product", b =>
                {
                    b.Navigation("TransactionProducts");
                });

            modelBuilder.Entity("SmallRetail.Data.Models.Transaction", b =>
                {
                    b.Navigation("TransactionProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
